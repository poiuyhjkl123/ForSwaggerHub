{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a sample Orders API based on the Orders demo from\n[https://smartbear.com/](https://smartbear.com).\n",
    "version" : "2",
    "title" : "Orders API",
    "contact" : {
      "email" : "test@smartbear.com"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/Julia_org/Orders/1.0.1",
  "schemes" : [ "https" ],
  "paths" : {
    "/order" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Returns all purchase orders in the DB",
        "operationId" : "getOrders",
        "produces" : [ "application/binary" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "file to download",
            "headers" : {
              "X-Rate-Limit-Remaining" : {
                "type" : "integer"
              }
            },
            "schema" : {
              "type" : "file",
              "example" : "https://github.com/rsms/node-imagemagick/archive/master.zip"
            }
          },
          "default" : {
            "description" : "Unexpected error"
          }
        }
      },
      "post" : {
        "tags" : [ "Order" ],
        "summary" : "Add a new purchase order to the DB",
        "operationId" : "placeOrder",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "order placed for purchasing the product",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Order_2"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "400" : {
            "description" : "Invalid Order"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        }
      }
    },
    "/order/{orderId}" : {
      "get" : {
        "tags" : [ "Order" ],
        "summary" : "Returns a purchase order by ID",
        "description" : "For valid response try integer IDs with value >= 1.",
        "operationId" : "getOrderById",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order ID",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        }
      },
      "put" : {
        "tags" : [ "Order" ],
        "summary" : "Update a purchase order by ID",
        "description" : "For valid response try integer IDs with value >= 1.",
        "operationId" : "putOrderById",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order ID of the order that needs to be updated",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "newOrder",
          "description" : "New order info for the order that needs to be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Order"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Order"
            }
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Order" ],
        "summary" : "Delete purchase order by its ID",
        "description" : "For valid response try integer IDs with value >= 1.",
        "operationId" : "deleteOrder",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "ID of the order that needs to be deleted",
          "required" : true,
          "type" : "integer",
          "minimum" : 1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Order not found"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        }
      }
    }
  },
  "definitions" : {
    "AllOrders" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Order"
      }
    },
    "Order" : {
      "type" : "object",
      "properties" : {
        "orderID" : {
          "type" : "integer",
          "format" : "int32"
        },
        "customerName" : {
          "type" : "string"
        },
        "product" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "street" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "expirationDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Order_2" : {
      "type" : "object",
      "properties" : {
        "orderID" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "customerName" : {
          "type" : "string",
          "example" : "Julia Kolosova"
        },
        "product" : {
          "type" : "string",
          "example" : "MyMoney"
        },
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "orderDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "street" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "expirationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "testprop" : {
          "type" : "string"
        }
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about Swagger",
    "url" : "http://swagger.io"
  },
  "x-azure-api-id" : "sh-1545237846865"
}