openapi: '3.0.0'
info:
  title: Plan API
  version: "1.0.0"
  description: APIs to fetch plans, plan, plan stats and plan investments. These APIs will be prefixed by the advisor scope since api authorization and permissioning are not implemented.
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SmartBear-CC/PlanAPIJulia/1.0.0
  

paths:

  /advisors/{advisorId}/plans:

    parameters:
      - $ref: '#/components/parameters/advisorId'
      - $ref: '#/components/parameters/pageNumber'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/search'

    get:
      operationId: getPlans
      summary: Get Paginated Advisor Plans
      responses:
        '200':
          description: Paginated plans with links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdvisorPaginatedPlans'
  
  /advisors/{advisorId}/plans/{planId}:
  
    parameters:
      - $ref: '#/components/parameters/advisorId'
      - $ref: '#/components/parameters/planId'

    get:
      operationId: getPlan
      summary: Get General Plan Information
      responses:
        '200':
          description: Plan information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'

  /advisors/{advisorId}/plans/{planId}/stats:
  
    parameters:
      - $ref: '#/components/parameters/advisorId'
      - $ref: '#/components/parameters/planId'

    get:
      operationId: getPlanStats
      summary: Get Plan Statistics
      responses:
        '200':
          description: Plan Statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanStats'
                
  /plans/{planId}/positions:
  
    parameters:
      - $ref: '#/components/parameters/planId'
      
    get:
      operationId: getPlanPositions
      summary: Get Plan Investment Positions
      responses:
        '200':
          description: Plan Positions with Stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanPositions'
  
  /plans:
  
    parameters:
      - $ref: '#/components/parameters/programId'
      - $ref: '#/components/parameters/pageSize'
      - $ref: '#/components/parameters/pageNumber'
      - $ref: '#/components/parameters/search'
      
    get:
      operationId: getProgramPlans
      summary: Get Plans for a program
      responses:
        '200':
          description: General Plan Info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlans'
    
components:
  
  parameters:

    advisorId:
      name: advisorId
      description: Advisor Id
      in: path
      required: true
      schema:
        type: integer
        example: 2

    pageNumber:
      name: pageNumber
      description: Page Number
      in: query
      required: false
      schema:
        type: integer

    pageSize:
      name: pageSize
      description: Page Size
      in: query
      required: false
      schema:
        type: integer

    planId:
      name: planId
      description: Plan Id
      in: path
      required: true
      schema:
        type: integer
    
    programId:
      name: programId
      description: Program Id
      in: query
      required: false 
      schema:
        type: integer
        
    search:
      name: search
      in: query
      required: false
      schema:
        type: string

  schemas:

    AdvisorPaginatedPlans:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/AdvisorPlansMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlanData'
        links:
          $ref: '#/components/schemas/Links'
    
    PaginatedPlans:
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PlansMeta'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PlanData'
        links:
          $ref: '#/components/schemas/Links'
          
    AdvisorPlansMeta:
      type: object
      properties:
        advisorId:
          type: integer
          example: 15
        count:
          type: integer
          
    PlansMeta:
      type: object
      properties:
        count:
          type: integer
    
    Links:
      type: object
      properties:
        self:
          type: string
          format: uri
        first:
          type: string
          format: uri
        last:
          type: string
          format: uri
        next:
          type: string
          format: uri

    Plan:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PlanData'

    PlanStats:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PlanStatsData'

    PlanStatsData:
      type: object
      properties:
        type:
          type: string
          example: PlanStats
        attributes:
          $ref: '#/components/schemas/PlanStatsAttributes'

    PlanStatsAttributes:
      type: object
      properties:
        totalParticipants:
          type: integer
          example: 150
        participantsWithDeferrals:
          type: integer
          example: 27
        participantsWithBalance:
          type: integer
          example: 25
        registeredParticipants:
          type: integer
          example: 35
        readyToEnrollParticipants:
          type: integer
          example: 72
        employedParticipants:
          type: integer
          example: 30
        terminatedParticipantsWithBalance:
          type: integer
          example: 5
        eligibleParticipants:
          type: integer
          example: 50
        participantsWithBeneficiary:
          type: integer
          example: 5
        eligiblesAvgDeferralRatePct:
          type: number
        contributingAvgDeferralRatePct:
          type: number
        modelDistributions:
          type: array
          items:
            $ref: '#/components/schemas/ModelDistribution'
          example:
            - modelId: 264
              modelName: Target Retirement 2040
              modelType: target
              participantsInModel: 2
              balanceInModel: 71507.12
            - modelId: 2
              modelName: Moderate
              modelType: risk
              participantsInModel: 250
              balanceInModel: 82123.50
            - modelId: -1
              modelName: Custom Lineup
              modelType: pmenu
              participantsInModel: 3
              balanceInModel: 12312.12
        modelAgeDistributions:
          type: array
          items:
            $ref: '#/components/schemas/ModelAgeDistribution'
          example:
          - modelId: 264
            modelName: Target Retirement 2040
            modelType: target
            participantsInModel: 2
            balanceInModel: 71507.12
            ageRange: 36-45
          - modelId: 2
            modelName: Moderate
            modelType: risk
            participantsInModel: 249
            balanceInModel: 71507.12
            ageRange: 36-45
          - modelId: 2
            modelName: Moderate
            modelType: risk
            participantsInModel: 1
            balanceInModel: 10616.38
            ageRange: =<25              
          - modelId: -1
            modelName: Custom Lineup
            modelType: pmenu
            participantsInModel: 3
            balanceInModel: 12312.12 
            ageRange: '>=66'
    PlanPositions:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/PositionsStats'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Position'

    ModelDistribution:
      type: object
      properties:
        modelId:
          type: integer
          example: 264
        modelName:
          type: string
          example: Target Retirement 2040
        modelType: 
          type: string
          enum:
            - risk
            - target
            - pmenu
        participantsInModel:
          type: integer
          example: 2
        balanceInModel:
          type: number
          example: 71507.12
          
    ModelAgeDistribution:
      type: object
      properties:
        modelId:
          type: integer
          example: 264
        modelName:
          type: string
          example: Target Retirement 2040
        modelType:  
          type: string
          enum:
            - risk
            - target
            - pmenu
        ageRange:
          type: string
          enum:
            - '<=25'
            - '26-35'
            - '36-45'
            - '46-55'
            - '56-65'
            - '>=66'
        participantsInModel:
          type: integer
          example: 2
        balanceInModel:
          type: number
          example: 71507.12

    AgeDistribution:
      type: object
      properties:
        ageRange:
          type: string
        participantsInRange:
          type: integer
          
    EligiblesAgeDistribution:
      type: object
      properties:
        ageRange:
          type: string
        participantsInRange:
          type: integer

    PlanData:
      type: object
      properties:
        type:
          type: string
          example: plan
        id:
          type: integer
          example: 1
        attributes:
          $ref: '#/components/schemas/PlanAttributes'
        relationships:
          $ref: '#/components/schemas/PlanRelationships'

    PlanAttributes:
      type: object
      properties:
        name:
          type: string
          example: Vestwell 401k Plan
        type:
          type: string
          example: 401K
        effectiveDate:
          type: string
          format: date
        status:
          type: string
          example: Active
        eligibleParticipants:
          type: integer
          example: 56
        registeredParticipants:
          type: integer
          example: 35
        readyToEnrollParticipants:
          type: integer
          example: 72
        participantsWithDeferrals:
          type: integer
          example: 35
        participantsWithBalance:
          type: integer
          example: 31
        totalBalance:
          type: number
          format: double
          example: 50000.00
        employeeBalance:
          type: number
          format: double
          example: 20000.00
        employerBalance:
          type: number
          format: double
          example: 10000.00
        rolloverBalance:
          type: number
          format: double
          example: 20000.0
        loanBalance:
          type: number
          format: double
          example: 10000.00
        
    PlanRelationships:
      type: object
      properties:
        advisor:
          $ref: '#/components/schemas/AdvisorRelationship'
        sponsor:
          $ref: '#/components/schemas/SponsorRelationship'
        program:
          $ref: '#/components/schemas/ProgramRelationship'

    AdvisorRelationship:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: advisor
            id:
              type: integer
              example: 1

    SponsorRelationship:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: sponsor
            id:
              type: integer
              example: 1

    ProgramRelationship:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: program
            id:
              type: integer
              example: 1
               
    PositionsStats:
      type: object
      properties:
        assetAllocations:
          type: object
          properties:
            bondNet:
              type: string
              format: currency
              example: 111
            bondNetPct:
              type: number
              format: double
              example: 1.1
            cashNet:
              type: number
              format: currency
              example: 1111
            cashNetPct:
              type: number
              format: double
              example: 11
            stockNet:
              type: string
              format: double
              example: 1111
            stockNetPct:
              type: number
              format: double
              example: 11
            otherNet:
              type: string
              format: currency
              example: 9876.9
            otherNetPct:
              type: number
              format: double
              example: 87.9
        modelAllocations:
          type: array
          items: 
            $ref: '#/components/schemas/ModelAllocation'

    ModelAllocation:
      type: object
      properties:
        model:
          type: string
          example: Vestwell Target Date 2020
        balance:
          type: string
          example: 123123.12
        percent:
          type: number
          format: double
          example: 100

    Position:
      type: object
      properties:
        type:
          type: string
          example: 'position'
        id:
          type: string
          example: 'SCHE'
        attributes:
          $ref: '#/components/schemas/PositionAttributes'
          
    PositionAttributes:
      type: object
      properties:
        shares:
          type: number
          example: 123.12
        vestedShares:
          type: number
          example: 111.11
        balance:
          type: number
          example: 12345.12
        vestedBalance:
          type: number
          example: 11111.11
        weightPct:
          type: number
          format: double
          example: 100.00